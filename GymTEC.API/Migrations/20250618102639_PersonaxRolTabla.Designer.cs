// <auto-generated />
using System;
using GymTEC.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GymTEC.API.Migrations
{
    [DbContext(typeof(GymTECDbContext))]
    [Migration("20250618102639_PersonaxRolTabla")]
    partial class PersonaxRolTabla
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GymTEC.API.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SpaEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("StoreEnabled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("GymTEC.API.Models.Cliente", b =>
                {
                    b.Property<string>("NumCedula")
                        .HasColumnType("text");

                    b.Property<decimal>("IMC")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("NumCedula");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GymTEC.API.Models.Persona", b =>
                {
                    b.Property<string>("NumCedula")
                        .HasColumnType("text");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NumCedula");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("GymTEC.API.Models.PersonaxRol", b =>
                {
                    b.Property<string>("NumCedula")
                        .HasColumnType("text");

                    b.Property<int>("IdRol")
                        .HasColumnType("integer");

                    b.HasKey("NumCedula", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("PersonaxRol");
                });

            modelBuilder.Entity("GymTEC.API.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GymTEC.API.Models.Cliente", b =>
                {
                    b.HasOne("GymTEC.API.Models.Persona", "Persona")
                        .WithOne()
                        .HasForeignKey("GymTEC.API.Models.Cliente", "NumCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("GymTEC.API.Models.PersonaxRol", b =>
                {
                    b.HasOne("GymTEC.API.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymTEC.API.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("NumCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
